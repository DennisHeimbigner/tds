apply from: "$rootDir/gradle/any/dependencies.gradle"
apply from: "$rootDir/gradle/any/war-published.gradle"
apply from: "$rootDir/gradle/any/gretty.gradle"

dependencies {
    implementation enforcedPlatform(project(':tds-platform'))

    implementation 'edu.ucar:d4core'
    implementation 'edu.ucar:d4lib'
    implementation 'edu.ucar:d4cdm'

    implementation project(":dap4:dap4-servlet")
    providedCompile "javax.servlet:javax.servlet-api:${depVersion.javaxServletApi}"

    implementation 'org.slf4j:slf4j-api'

    runtime 'org.apache.logging.log4j:log4j-slf4j-impl'
    runtime 'org.apache.logging.log4j:log4j-web'
    implementation 'org.slf4j:slf4j-api'
    testRuntime 'ch.qos.logback:logback-classic'
}

// This specifies the resources from ":dap4:d4tests" that we need to include in the d4ts war and inplaceWebapp.
def d4testsResourcesCopySpec = copySpec {
   File d4testsResourcesDir = project(":dap4:d4tests").file('src/test/data/resources')

    from (new File(d4testsResourcesDir, 'favicon.ico')) {
        into('WEB-INF/')
    }
    from (new File(d4testsResourcesDir, "testfiles/")) {
        into('WEB-INF/resources/testfiles/')
        include('*.nc')
        include('*.hdf5')
        include('*.raw')
    }
    /* ignore for now
    from(new File(d4testsResourcesDir, "testfiles/dmr/")) {
        into('WEB-INF/resources/testfiles/dmr/')
        include('*.dmr')
    }
    */
}


import org.akhikhl.gretty.AppBeforeIntegrationTestTask
import org.akhikhl.gretty.AppAfterIntegrationTestTask

task('AppWarBeforeIntegrationTest', type: AppBeforeIntegrationTestTask) {
  dependsOn assemble
  inplace false
  integrationTestTask 'test'
}

task('AppWarAfterIntegrationTest', type: AppAfterIntegrationTestTask) {
  integrationTestTask 'test'
}

war {
  with d4testsResourcesCopySpec
}

gretty {
    httpPort = 8083
    contextPath = '/d4ts'

    afterEvaluate {
        prepareInplaceWebAppFolder.with d4testsResourcesCopySpec
    }
}
