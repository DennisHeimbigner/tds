import javax.xml.transform.TransformerFactory

description = 'TDS - NetCDF-Java library integration Test module. Starts up a TDS server and then sends requests ' +
    'to it. Relies on having access to cdmUnitTest directory - see https://github.com/unidata/thredds-test-data.'

ext.title = 'Test Integration'
ext.url = 'https://www.unidata.ucar.edu/software/tds/'

apply from: "$rootDir/gradle/any/dependencies.gradle"
apply from: "$rootDir/gradle/any/java-test-only.gradle"
apply plugin: 'groovy'  // For Spock tests.

dependencies {
  compile enforcedPlatform(project(':tds-platform'))
  compile enforcedPlatform(project(':tds-testing-platform'))

  testCompile 'edu.ucar:cdm-core'
  testCompile 'edu.ucar:httpservices'
  testCompile project(':tdcommon')
  testCompile(project(':tds')) {
    exclude group: 'org.apache.logging.log4j'  // We don't want TDS's log4j cruft.
    exclude group: 'org.apache.taglibs', module: 'taglibs-standard-spec'
    exclude group: 'org.apache.taglibs', module: 'taglibs-standard-impl'
  }
  testCompile project(':testUtil')
  // tds needs threddsIso stuff at runtime
  runtime 'EDS:threddsIso'
  runtime 'net.sf.saxon:Saxon-HE'

  testRuntime 'edu.ucar:cdm-image'
  testRuntime 'edu.ucar:cdm-radial'
  testRuntime 'edu.ucar:grib'
  testRuntime 'edu.ucar:opendap'
  testRuntime 'edu.ucar:cdm-mcidas'
  testRuntime 'edu.ucar:d4cdm'

  testCompile 'org.jdom:jdom2'
  testCompile 'commons-io:commons-io'
  testCompile 'joda-time:joda-time'
  testCompile 'org.apache.httpcomponents:httpcore'
  testCompile 'org.apache.httpcomponents:httpclient'
  testCompile 'org.apache.httpcomponents:httpmime'
  testCompile 'org.apache.commons:commons-lang3'// only used by this module - replace?
  testCompile 'org.springframework:spring-context'
  testCompile 'org.slf4j:slf4j-api'
  testCompile 'org.xmlunit:xmlunit-core'  // For comparing catalog XML.

  testRuntime 'jaxen:jaxen'
  testRuntime 'ch.qos.logback:logback-classic'

  // These are for Spock.
  testCompile 'org.spockframework:spock-core'
  testCompile 'org.codehaus.groovy:groovy-all'
}

// Gretty will start the webapp before this task and shut it down afterward.
test {
  // isContentRootAvailable, isJenkins, and contentRootKey are defined on the root project in testing.gradle.
  if (!isContentRootAvailable && !isJenkins) {  // Don't skip tests on Jenkins, except NotJenkins ones.
    logger.warn "Skipping all integration tests (task \'$path\'): " + "\'$contentRootKey\' property not defined."

    // We can't stand up a functioning TDS test instance without a valid content root,
    // so disable the task altogether.
    enabled = false
  }
}

// spin up the tds for testing
test.dependsOn(':tds:AppWarBeforeIntegrationTest')
test.finalizedBy(':tds:AppWarAfterIntegrationTest')
