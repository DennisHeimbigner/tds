on: [pull_request]

jobs:
  check-assemble-adpotopenjdk-hs-8:
    name: Check fresh assemble of THREDDS Data Server Project (AdoptOpenJDK-HS 8)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch latest AdoptOpenJDK 8 (hotspot) built for linux"
        run: curl -L "https://api.adoptopenjdk.net/v2/binary/releases/openjdk8?openjdk_impl=hotspot&arch=x64&release=latest&type=jdk&os=linux" -o aojdk8-hs.tar.gz
      - name: Setup Latest AdoptOpenJDK (hotspot) 8
        uses: actions/setup-java@master
        with:
          java-version: 8
          architecture: x64
          jdkFile: ./aojdk8-hs.tar.gz
      - name: Print java version
        run: java -version
      - name: Build and test with Gradle
        run: ./gradlew assemble --refresh-dependencies

  tests-adpotopenjdk-hs-8:
    name: THREDDS Data Server Tests (AdoptOpenJDK-HS 8)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch latest AdoptOpenJDK 8 (hotspot) built for linux"
        run: curl -L "https://api.adoptopenjdk.net/v2/binary/releases/openjdk8?openjdk_impl=hotspot&arch=x64&release=latest&type=jdk&os=linux" -o aojdk8-hs.tar.gz
      - name: Setup Latest AdoptOpenJDK (hotspot) 8
        uses: actions/setup-java@master
        with:
          java-version: 8
          architecture: x64
          jdkFile: ./aojdk8-hs.tar.gz
      - name: Print java version
        run: java -version
      - name: Install netCDF-C
        shell: bash
        run: |
          sudo apt update
          sudo apt install libnetcdf-dev
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and test with Gradle
        run: ./gradlew -Dtds.content.root.path=$CONTENT_DIR  -Dtds.download.dir=$DOWNLOAD_DIR -Dtds.upload.dir=$UPLOAD_DIR --info --stacktrace testAll
        env:
          TRAVIS: 'true'
          CONTENT_DIR: ${{ github.workspace }}/tds/src/test/content
          DOWNLOAD_DIR: '/tmp/download'
          UPLOAD_DIR: '/tmp/upload'
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: tds_JUnit_Results_${{ github.sha }}_AdoptOpenJDK-HS-8
          path: build/reports/allTests

  tests-adpotopenjdk-hs-8-builders:
    name: THREDDS Data Server Tests (AdoptOpenJDK-HS 8)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch latest AdoptOpenJDK 8 (hotspot) built for linux"
        run: curl -L "https://api.adoptopenjdk.net/v2/binary/releases/openjdk8?openjdk_impl=hotspot&arch=x64&release=latest&type=jdk&os=linux" -o aojdk8-hs.tar.gz
      - name: Setup Latest AdoptOpenJDK (hotspot) 8
        uses: actions/setup-java@master
        with:
          java-version: 8
          architecture: x64
          jdkFile: ./aojdk8-hs.tar.gz
      - name: Print java version
        run: java -version
      - name: Install netCDF-C
        shell: bash
        run: |
          sudo apt update
          sudo apt install libnetcdf-dev
       - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and test with Gradle
        run: ./gradlew -Dtds.content.root.path=$CONTENT_DIR  -Dtds.download.dir=$DOWNLOAD_DIR -Dtds.upload.dir=$UPLOAD_DIR -Dthredds.test.experimental.useNetcdfJavaBuilders=true --info --stacktrace testAll
        env:
          TRAVIS: 'true'
          CONTENT_DIR: ${{ github.workspace }}/tds/src/test/content
          DOWNLOAD_DIR: '/tmp/download'
          UPLOAD_DIR: '/tmp/upload'
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: tds_JUnit_Results_${{ github.sha }}_AdoptOpenJDK-HS-8
          path: build/reports/allTests

  spotless:
    name: Code Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Code Style Check with Gradle and Spotless
        run: ./gradlew clean spotlessCheck
